import matplotlib.pyplot as plt
import math
import statistics


listsizes = [10,
10,
10,
10,
20,
20,
20,
20,
40,
40,
40,
40,
80,
80,
80,
80,
100,
100,
100,
100,
200,
200,
200,
200,
400,
400,
400,
400,
800,
800,
800,
800,
1000,
1000,
1000,
1000,
2000,
2000,
2000,
2000,
4000,
4000,
4000,
4000,
8000,
8000,
8000,
8000,
10000,
10000,
10000,
10000,
20000,
20000,
20000,
20000,
40000,
40000,
40000,
40000,
80000,
80000,
80000,
80000,
100000,
100000,
100000,
100000]
naive_kruskal = [23915,
24992,
30038,
26754,
62863,
60493,
68724,
59900,
133139,
113525,
116136,
114071,
280859,
260143,
241130,
301758,
375627,
347675,
391226,
380294,
911481,
797984,
913497,
934407,
2285836,
1900470,
2307971,
2174479,
5573506,
6230898,
6332033,
6539931,
9570401,
10082773,
9247178,
10725167,
39606773,
30222781,
34544480,
31602076,
128371107,
127636559,
119275447,
126589124,
468349128,
469232552,
442641147,
492510898,
708968698,
714379325,
662675155,
706477429,
3032681867,
3099652797,
2907198472,
3074446146,
12458492723,
12506022994,
11916871208,
11936211935,
50503685382,
49101632999,
49549893017,
49300911938,
111533050775,
110372972668,
118601794764,
115785160943]
union_find_kruskal = [32160,
37817,
42081,
35813,
112558,
80978,
112185,
89569,
221405,
191059,
232741,
215042,
573371,
608024,
548770,
613952,
937577,
796638,
744566,
830149,
1996663,
1954546,
2037647,
2015162,
5058637,
4491322,
4708523,
5381881,
12751902,
13433694,
13014482,
12117158,
19475817,
18461208,
17277255,
18569046,
58227565,
48178224,
52990435,
49745038,
158552733,
180603666,
138529477,
160587263,
488917655,
511434490,
471286056,
468546157,
697385189,
628746725,
672547532,
669646436,
2246049377,
2238920906,
2346110848,
2270616035,
8041982852,
8342672087,
7559866541,
7645190281,
29220539689,
29252494884,
28762627601,
29507473435,
43811296470,
44884895235,
44071261105,
43818247128]

c_estimates_naive = [round(naive_kruskal[i]/listsizes[i],3) for i in range(len(listsizes))]
ratios_naive = [None] + [round(naive_kruskal[i+1]/naive_kruskal[i],3) for i in range(len(listsizes)-1)]
c_estimates_union = [round(union_find_kruskal[i]/listsizes[i],3) for i in range(len(listsizes))]
ratios_union = [None] + [round(union_find_kruskal[i+1]/union_find_kruskal[i],3) for i in range(len(listsizes)-1)]

print("Size\tTime Naive(ns)\tTime Union\tCostant Naive\t\tRatio Naive\t\tCostant Union\t\tRatio Union")
print(50*"-")
for i in range(len(listsizes)):
  print(listsizes[i], naive_kruskal[i], '', union_find_kruskal[i], '', c_estimates_naive[i], '', ratios_naive[i], '', c_estimates_union[i], '', ratios_union[i], sep="\t")
print(50*"-")

constant_naive = naive_kruskal[len(naive_kruskal)//3]
print(constant_naive)

constant_union = sum(c_estimates_union) / len(c_estimates_union)
print("Costant for union: ", constant_union)


plt.plot(listsizes, naive_kruskal, label='naive kruskal')
plt.plot(listsizes, union_find_kruskal, label='union find')
reference_naive = [constant_naive * size for size in listsizes]
plt.plot(listsizes, reference_naive, label='constant for naive')
reference_union = [constant_union * size for size in listsizes]
plt.plot(listsizes, reference_union, label='constant for union')
plt.legend()
plt.xlabel('Number of vertices')
plt.ylabel('Run times (ms)')
plt.show()
